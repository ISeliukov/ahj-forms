!function(){"use strict";class t{constructor(t,e){this.parentEl=t;const{title:o,text:i}=e;this.title=o,this.text=i}get markup(){return`\n    <button data-id="my-popoverButton" class="my-popoverButton" type="">Click to toggle my-popover</button>\n    <div data-id="my-popover" class="my-popover my-popover-invisible">\n      <div data-id="my-popover-title" class="my-popover-title">\n        <div data-id="my-popover-title-text" class="my-popover-title-text">${this.title}</div>\n      </div>\n      <div data-id="my-popover-body" class="my-popover-body">\n        <div data-id="my-popover-body-text" class="my-popover-body-text">${this.text}</div>\n      </div>\n    </div>\n    `}get myPowerButton(){return"[data-id=my-popoverButton]"}get myPopover(){return"[data-id=my-popover]"}bindToDOM(){this.parentEl.innerHTML=this.markup,this.parentEl.querySelector(this.myPowerButton).addEventListener("click",(()=>this.toggleDisplay())),this.parentEl.querySelector(this.myPopover).addEventListener("click",(()=>this.toggleDisplay()))}toggleDisplay(){const t="my-popover-invisible",e=this.parentEl.querySelector(this.myPopover),o=this.parentEl.querySelector(this.myPowerButton);e.classList.contains(t)?(e.classList.remove(t),e.style.width=`${o.offsetWidth}px`,e.style.top=o.offsetTop-e.offsetHeight+"px",e.style.left=`${o.offsetLeft}px`):e.classList.add(t)}}document.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector("#ComponentContainer");new t(e,{title:"Какой-то заголовок",text:"Будьте добры, прочитайте этот текст. Этот текст очень важен для вас."}).bindToDOM(),console.log("Component started!")}))}();
//# sourceMappingURL=app.js.map